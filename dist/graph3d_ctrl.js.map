{"version":3,"sources":["../src/graph3d_ctrl.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAQ,sB,kBAAA,gB;;AACD,O;;AAEA,gB;;AACA,e;;;;;;;;;;;;;;;;;;;;;6BAEM,W;;;AAEX,6BAAY,MAAZ,EAAoB,SAApB,EAA+B,UAA/B,EAA2C;AAAA;;AAAA,qGACnC,MADmC,EAC3B,SAD2B;;AAEzC,gBAAK,UAAL,GAAkB,UAAlB;;AAEA,cAAI,CAAE,MAAK,KAAL,CAAW,cAAjB,EAAiC;AAC/B,kBAAK,mBAAL;AACD;;AAED,gBAAK,MAAL,CAAY,EAAZ,CAAe,QAAf,EAAyB,MAAK,QAAL,CAAc,IAAd,OAAzB;AACA,gBAAK,MAAL,CAAY,EAAZ,CAAe,eAAf,EAAgC,MAAK,cAAL,CAAoB,IAApB,OAAhC;AACA,gBAAK,MAAL,CAAY,EAAZ,CAAe,YAAf,EAA6B,MAAK,WAAL,CAAiB,IAAjB,OAA7B;AACA,gBAAK,MAAL,CAAY,EAAZ,CAAe,oBAAf,EAAqC,MAAK,cAAL,CAAoB,IAApB,OAArC;AACA,gBAAK,MAAL,CAAY,EAAZ,CAAe,gBAAf,EAAiC,MAAK,cAAL,CAAoB,IAApB,OAAjC;AAZyC;AAa1C;;;;2CAEgB;AACf,iBAAK,YAAL,CAAkB,SAAlB,EAA6B,kDAA7B,EAAiF,CAAjF;AACD;;;wCAEa;AACZ,iBAAK,MAAL,GAAc,EAAd;AACA,iBAAK,MAAL;AACD;;;qCAEU;AACT,iBAAK,IAAL,GAAY,KAAK,WAAL,CAAiB,KAAK,MAAtB,CAAZ;AACD;;;sCAEW,M,EAAQ;AAClB,mBAAO,EAAE,GAAF,CAAM,KAAK,MAAX,EAAmB,UAAC,KAAD,EAAQ,CAAR,EAAc;AACtC,qBAAO;AACL,uBAAO,MAAM,KADR;AAEL,4BAAY,MAAM;AAFb,eAAP;AAID,aALM,CAAP;AAMD;;;yCAEc,Q,EAAU;AACvB,iBAAK,MAAL,GAAc,SAAS,GAAT,CAAa,KAAK,aAAL,CAAmB,IAAnB,CAAwB,IAAxB,CAAb,CAAd;AACA,iBAAK,IAAL,GAAY,KAAK,WAAL,CAAiB,KAAK,MAAtB,CAAZ;AACA,iBAAK,MAAL,CAAY,KAAK,IAAjB;AACD;;;wCAEa,U,EAAY;AACxB,gBAAI,SAAS,IAAI,UAAJ,CAAe;AAC1B,0BAAY,WAAW,UADG;AAE1B,qBAAO,WAAW;AAFQ,aAAf,CAAb;;AAKA,mBAAO,MAAP;AACD;;;gDAEqB;;AAEpB,iBAAK,KAAL,CAAW,cAAX,GAA4B;AAC1B,0BAAY,GADc;AAE1B,wBAAY,GAFc;AAG1B,wBAAY;AAHc,aAA5B;AAKA,iBAAK,MAAL,CAAY,KAAK,IAAjB;AACD;;;+CAEoB;AACnB,iBAAK,KAAL,CAAW,cAAX,GAA4B,KAAK,qBAAjC;AACD;;;sCAEW,K,EAAO;AACjB,mBAAO,KAAP;AACD;;;+BAEI,K,EAAO,I,EAAM,K,EAAO,I,EAAM;AAC7B,iBAAK,OAAL,GAAe,UAAU,KAAV,EAAiB,IAAjB,EAAuB,KAAvB,EAA8B,IAA9B,CAAf;AACD;;;;QA1E8B,gB;;;;AA6EjC,kBAAY,WAAZ,GAA0B,aAA1B","file":"graph3d_ctrl.js","sourcesContent":["import {MetricsPanelCtrl} from 'app/plugins/sdk';\nimport _ from 'lodash';\n//import kbn from 'app/core/utils/kbn';\nimport TimeSeries from 'app/core/time_series';\nimport rendering from './rendering';\n\nexport class Graph3dCtrl extends MetricsPanelCtrl {\n\n  constructor($scope, $injector, $rootScope) {\n    super($scope, $injector);\n    this.$rootScope = $rootScope;\n\n    if (! this.panel.cameraPosition) {\n      this.resetCameraPosition();\n    }\n\n    this.events.on('render', this.onRender.bind(this));\n    this.events.on('data-received', this.onDataReceived.bind(this));\n    this.events.on('data-error', this.onDataError.bind(this));\n    this.events.on('data-snapshot-load', this.onDataReceived.bind(this));\n    this.events.on('init-edit-mode', this.onInitEditMode.bind(this));\n  }\n\n  onInitEditMode() {\n    this.addEditorTab('Options', 'public/plugins/grafana-graph3d-panel/editor.html', 2);\n  }\n\n  onDataError() {\n    this.series = [];\n    this.render();\n  }\n\n  onRender() {\n    this.data = this.parseSeries(this.series);\n  }\n\n  parseSeries(series) {\n    return _.map(this.series, (serie, i) => {\n      return {\n        label: serie.alias,\n        datapoints: serie.datapoints\n      };\n    });\n  }\n\n  onDataReceived(dataList) {\n    this.series = dataList.map(this.seriesHandler.bind(this));\n    this.data = this.parseSeries(this.series);\n    this.render(this.data);\n  }\n\n  seriesHandler(seriesData) {\n    var series = new TimeSeries({\n      datapoints: seriesData.datapoints,\n      alias: seriesData.target\n    });\n\n    return series;\n  }\n\n  resetCameraPosition() {\n    // See http://visjs.org/docs/graph3d/#Methods\n    this.panel.cameraPosition = {\n      horizontal: 1.0,\n      vertical:   0.5,\n      distance:   1.7\n    };\n    this.render(this.data);\n  }\n\n  loadCameraPosition() {\n    this.panel.cameraPosition = this.currentCameraPosition;\n  }\n\n  formatValue(value) {\n    return value;\n  }\n\n  link(scope, elem, attrs, ctrl) {\n    this.graph3d = rendering(scope, elem, attrs, ctrl);\n  }\n}\n\nGraph3dCtrl.templateUrl = 'module.html';\n"]}